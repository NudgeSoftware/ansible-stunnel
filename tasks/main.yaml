---
- name: Test distribution
  assert:
    that: >
      ansible_os_family == "RedHat"
  tags:
    - stunnel_assert

- name: Install Stunnel
  package:
    name: "{{ stunnel_pkg }}"
  notify:
    - Restart Stunnel service
  tags:
    - stunnel_pkg

- name: Write cert file
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.path }}"
    mode: 0600
  no_log: "{{ censor_secrets|d(true) }}"
  when: stunnel_certs is defined
  notify:
    - Restart Stunnel service
  tags:
    - stunnel_config
  with_items: "{{ stunnel_certs }}"

- name: write stunnel.conf 
  template: 
    src: etc/stunnel/stunnel.conf.j2
    dest: "{{ stunnel_config_file }}"
  notify:
    - Restart Stunnel service
  tags:
    - stunnel_config  

- name: Install Stunnel systemd script
  copy:
    src: stunnel.systemd
    dest: "{{ stunnel_service_systemd }}"
    mode: 0644
  when:
    - stunnel_service_install
    - ansible_service_mgr == 'systemd'
  tags:
    - stunnel_service

- name: Install Stunnel upstart script
  copy:
    src: stunnel.upstart
    dest: "{{ stunnel_service_upstart }}"
    mode: 0755
  when:
    - stunnel_service_install
    - ansible_service_mgr == 'upstart'
  tags:
    - stunnel_service

- name: "{{ 'Enable' if stunnel_config | length > 0 else 'Disable' }} Stunnel service"
  service:
    name: "{{ stunnel_service }}"
    enabled: "{{ 'yes' if stunnel_config | length > 0 else 'no' }}"
  tags:
    - stunnel_service

- name: "{{ 'Start' if stunnel_config | length > 0 else 'Stop' }} Stunnel service"
  service:
    name: "{{ stunnel_service }}"
    state: "{{ 'started' if stunnel_config | length > 0 else 'stopped' }}"
  register: stunnel_service_started
  tags:
    - stunnel_service
